# Generated by Django 5.2.4 on 2025-10-04 10:07

import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название категории')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название страны')),
                ('code', models.CharField(max_length=2, unique=True, verbose_name='Код страны (ISO 3166-1 alpha-2)')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Язык')),
            ],
            options={
                'verbose_name': 'Язык',
                'verbose_name_plural': 'Языки',
            },
        ),
        migrations.CreateModel(
            name='TelegramChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_id', models.BigIntegerField(unique=True, verbose_name='ID канала')),
                ('username', models.CharField(blank=True, max_length=255, null=True, verbose_name='Username')),
                ('title', models.CharField(max_length=255, verbose_name='Название канала')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание канала')),
                ('photo_url', models.URLField(blank=True, max_length=2048, null=True, verbose_name='Аватар')),
                ('creation_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата создания')),
                ('subscribers_count', models.IntegerField(default=0, verbose_name='Подписчики')),
                ('avg_post_reach', models.IntegerField(default=0, verbose_name='Средний охват поста')),
                ('avg_post_reach_24h', models.IntegerField(default=0, verbose_name='Средний охват поста (24ч)')),
                ('err', models.FloatField(default=0.0, verbose_name='ERR')),
                ('er', models.FloatField(default=0.0, verbose_name='ER')),
                ('male_audience_percentage', models.FloatField(default=0.0, verbose_name='Мужская аудитория (%)')),
                ('female_audience_percentage', models.FloatField(default=0.0, verbose_name='Женская аудитория (%)')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Верифицирован')),
                ('is_rkn_registered', models.BooleanField(default=False, verbose_name='Зарегистрирован в РКН')),
                ('has_stories', models.BooleanField(default=False, verbose_name='Есть сторис')),
                ('has_red_label', models.BooleanField(default=False, verbose_name='Красная метка')),
                ('is_scam', models.BooleanField(default=False, verbose_name='SCAM/FAKE')),
                ('is_dead', models.BooleanField(default=False, verbose_name='"Мертвый"')),
                ('parsed_at', models.DateTimeField(auto_now=True, verbose_name='Дата последнего парсинга')),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='parser.category', verbose_name='Категория')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='parser.country', verbose_name='Страна')),
                ('language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='parser.language', verbose_name='Язык')),
            ],
            options={
                'verbose_name': 'Telegram канал',
                'verbose_name_plural': 'Telegram каналы',
                'indexes': [django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='parser_tele_search__960f02_gin'), models.Index(fields=['subscribers_count'], name='parser_tele_subscri_ea380f_idx'), models.Index(fields=['avg_post_reach'], name='parser_tele_avg_pos_44b31d_idx'), models.Index(fields=['err'], name='parser_tele_err_d59bdf_idx')],
            },
        ),
    ]
